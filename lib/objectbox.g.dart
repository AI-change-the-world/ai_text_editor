// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again
// with `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import 'objectbox/model.dart';
import 'objectbox/recent_files.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
      id: const obx_int.IdUid(1, 7888250155119839798),
      name: 'Model',
      lastPropertyId: const obx_int.IdUid(6, 2366938397299607619),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 5937691340998417933),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 6951274381860307434),
            name: 'tag',
            type: 9,
            flags: 2080,
            indexId: const obx_int.IdUid(1, 1206263127548344179)),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 6960838681920661592),
            name: 'baseUrl',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 2570535714279082758),
            name: 'modelName',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 6092301172657730544),
            name: 'sk',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 2366938397299607619),
            name: 'createdAt',
            type: 6,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(2, 5223053008767375278),
      name: 'ModelChangeHistory',
      lastPropertyId: const obx_int.IdUid(3, 1942603380177103989),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 3242355618125967367),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 4165174399635639401),
            name: 'tag',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 1942603380177103989),
            name: 'createdAt',
            type: 6,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(3, 2532242625166821128),
      name: 'RecentFiles',
      lastPropertyId: const obx_int.IdUid(4, 5191401903020052050),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 6605414093469963303),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 6446781946106700428),
            name: 'path',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 2229186183726866292),
            name: 'createdAt',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 5191401903020052050),
            name: 'lastEdited',
            type: 6,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[])
];

/// Shortcut for [obx.Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [obx.Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore(
    {String? directory,
    int? maxDBSizeInKB,
    int? maxDataSizeInKB,
    int? fileMode,
    int? maxReaders,
    bool queriesCaseSensitiveDefault = true,
    String? macosApplicationGroup}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(getObjectBoxModel(),
      directory: directory ?? (await defaultStoreDirectory()).path,
      maxDBSizeInKB: maxDBSizeInKB,
      maxDataSizeInKB: maxDataSizeInKB,
      fileMode: fileMode,
      maxReaders: maxReaders,
      queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
      macosApplicationGroup: macosApplicationGroup);
}

/// Returns the ObjectBox model definition for this project for use with
/// [obx.Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
      entities: _entities,
      lastEntityId: const obx_int.IdUid(3, 2532242625166821128),
      lastIndexId: const obx_int.IdUid(1, 1206263127548344179),
      lastRelationId: const obx_int.IdUid(0, 0),
      lastSequenceId: const obx_int.IdUid(0, 0),
      retiredEntityUids: const [],
      retiredIndexUids: const [],
      retiredPropertyUids: const [],
      retiredRelationUids: const [],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, obx_int.EntityDefinition>{
    Model: obx_int.EntityDefinition<Model>(
        model: _entities[0],
        toOneRelations: (Model object) => [],
        toManyRelations: (Model object) => {},
        getId: (Model object) => object.id,
        setId: (Model object, int id) {
          object.id = id;
        },
        objectToFB: (Model object, fb.Builder fbb) {
          final tagOffset = fbb.writeString(object.tag);
          final baseUrlOffset = fbb.writeString(object.baseUrl);
          final modelNameOffset = fbb.writeString(object.modelName);
          final skOffset = fbb.writeString(object.sk);
          fbb.startTable(7);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, tagOffset);
          fbb.addOffset(2, baseUrlOffset);
          fbb.addOffset(3, modelNameOffset);
          fbb.addOffset(4, skOffset);
          fbb.addInt64(5, object.createdAt);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final tagParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final baseUrlParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 8, '');
          final modelNameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 10, '');
          final skParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 12, '');
          final object = Model(
              id: idParam,
              tag: tagParam,
              baseUrl: baseUrlParam,
              modelName: modelNameParam,
              sk: skParam)
            ..createdAt =
                const fb.Int64Reader().vTableGet(buffer, rootOffset, 14, 0);

          return object;
        }),
    ModelChangeHistory: obx_int.EntityDefinition<ModelChangeHistory>(
        model: _entities[1],
        toOneRelations: (ModelChangeHistory object) => [],
        toManyRelations: (ModelChangeHistory object) => {},
        getId: (ModelChangeHistory object) => object.id,
        setId: (ModelChangeHistory object, int id) {
          object.id = id;
        },
        objectToFB: (ModelChangeHistory object, fb.Builder fbb) {
          final tagOffset = fbb.writeString(object.tag);
          fbb.startTable(4);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, tagOffset);
          fbb.addInt64(2, object.createdAt);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final tagParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final object = ModelChangeHistory(id: idParam, tag: tagParam)
            ..createdAt =
                const fb.Int64Reader().vTableGet(buffer, rootOffset, 8, 0);

          return object;
        }),
    RecentFiles: obx_int.EntityDefinition<RecentFiles>(
        model: _entities[2],
        toOneRelations: (RecentFiles object) => [],
        toManyRelations: (RecentFiles object) => {},
        getId: (RecentFiles object) => object.id,
        setId: (RecentFiles object, int id) {
          object.id = id;
        },
        objectToFB: (RecentFiles object, fb.Builder fbb) {
          final pathOffset = fbb.writeString(object.path);
          fbb.startTable(5);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, pathOffset);
          fbb.addInt64(2, object.createdAt);
          fbb.addInt64(3, object.lastEdited);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final pathParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final object = RecentFiles(id: idParam, path: pathParam)
            ..createdAt =
                const fb.Int64Reader().vTableGet(buffer, rootOffset, 8, 0)
            ..lastEdited =
                const fb.Int64Reader().vTableGet(buffer, rootOffset, 10, 0);

          return object;
        })
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [Model] entity fields to define ObjectBox queries.
class Model_ {
  /// See [Model.id].
  static final id = obx.QueryIntegerProperty<Model>(_entities[0].properties[0]);

  /// See [Model.tag].
  static final tag = obx.QueryStringProperty<Model>(_entities[0].properties[1]);

  /// See [Model.baseUrl].
  static final baseUrl =
      obx.QueryStringProperty<Model>(_entities[0].properties[2]);

  /// See [Model.modelName].
  static final modelName =
      obx.QueryStringProperty<Model>(_entities[0].properties[3]);

  /// See [Model.sk].
  static final sk = obx.QueryStringProperty<Model>(_entities[0].properties[4]);

  /// See [Model.createdAt].
  static final createdAt =
      obx.QueryIntegerProperty<Model>(_entities[0].properties[5]);
}

/// [ModelChangeHistory] entity fields to define ObjectBox queries.
class ModelChangeHistory_ {
  /// See [ModelChangeHistory.id].
  static final id =
      obx.QueryIntegerProperty<ModelChangeHistory>(_entities[1].properties[0]);

  /// See [ModelChangeHistory.tag].
  static final tag =
      obx.QueryStringProperty<ModelChangeHistory>(_entities[1].properties[1]);

  /// See [ModelChangeHistory.createdAt].
  static final createdAt =
      obx.QueryIntegerProperty<ModelChangeHistory>(_entities[1].properties[2]);
}

/// [RecentFiles] entity fields to define ObjectBox queries.
class RecentFiles_ {
  /// See [RecentFiles.id].
  static final id =
      obx.QueryIntegerProperty<RecentFiles>(_entities[2].properties[0]);

  /// See [RecentFiles.path].
  static final path =
      obx.QueryStringProperty<RecentFiles>(_entities[2].properties[1]);

  /// See [RecentFiles.createdAt].
  static final createdAt =
      obx.QueryIntegerProperty<RecentFiles>(_entities[2].properties[2]);

  /// See [RecentFiles.lastEdited].
  static final lastEdited =
      obx.QueryIntegerProperty<RecentFiles>(_entities[2].properties[3]);
}
